security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
        App\Entity\Restaurant:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        in_database:
            entity:
                class: App\Entity\User
                property: email

        restau_in_memory: { memory: null }
        in_database_restau:
            entity:
                class: App\Entity\Restaurant
                property: restau_mail

        all_users:
            chain:
                providers: ['in_database_restau', 'in_database']        
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: all_users

            form_login:
                login_path: login
                check_path: login

            logout:
                path: logout
                target: home

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/forgetpass, , roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/profile, roles: ROLE_USER }
